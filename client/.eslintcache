[{"D:\\VSCProjects\\E-Commerce-Website Nodejs\\client\\src\\App.js":"1","D:\\VSCProjects\\E-Commerce-Website Nodejs\\client\\src\\redux\\store.js":"2","D:\\VSCProjects\\E-Commerce-Website Nodejs\\client\\src\\components\\admin\\product-table\\index.jsx":"3","D:\\VSCProjects\\E-Commerce-Website Nodejs\\client\\src\\pages\\admin\\index.jsx":"4","D:\\VSCProjects\\E-Commerce-Website Nodejs\\client\\src\\api\\index.js":"5","D:\\VSCProjects\\E-Commerce-Website Nodejs\\client\\src\\index.js":"6","D:\\VSCProjects\\E-Commerce-Website Nodejs\\client\\src\\pages\\admin\\create-product\\index.jsx":"7","D:\\VSCProjects\\E-Commerce-Website Nodejs\\client\\src\\pages\\admin\\manage-categories-brands\\index.jsx":"8","D:\\VSCProjects\\E-Commerce-Website Nodejs\\client\\src\\slices\\product-slice.js":"9","D:\\VSCProjects\\E-Commerce-Website Nodejs\\client\\src\\components\\admin\\order-list\\index.jsx":"10","D:\\VSCProjects\\E-Commerce-Website Nodejs\\client\\src\\slices\\order-slice.js":"11","D:\\VSCProjects\\E-Commerce-Website Nodejs\\client\\src\\pages\\register-jwt-auth\\index.js":"12","D:\\VSCProjects\\E-Commerce-Website Nodejs\\client\\src\\pages\\activation-jwt-auth\\index.js":"13","D:\\VSCProjects\\E-Commerce-Website Nodejs\\client\\src\\pages\\login-jwt-auth\\index.jsx":"14","D:\\VSCProjects\\E-Commerce-Website Nodejs\\client\\src\\helpers\\auth.js":"15","D:\\VSCProjects\\E-Commerce-Website Nodejs\\client\\src\\pages\\reset-password-jwt-auth\\index.jsx":"16"},{"size":2188,"mtime":1607085581125,"results":"17","hashOfConfig":"18"},{"size":331,"mtime":1606820519534,"results":"19","hashOfConfig":"18"},{"size":4982,"mtime":1606821534461,"results":"20","hashOfConfig":"18"},{"size":2193,"mtime":1606842133839,"results":"21","hashOfConfig":"18"},{"size":1445,"mtime":1607103095331,"results":"22","hashOfConfig":"18"},{"size":297,"mtime":1606595863821,"results":"23","hashOfConfig":"18"},{"size":13856,"mtime":1606813231434,"results":"24","hashOfConfig":"18"},{"size":1144,"mtime":1606720328124,"results":"25","hashOfConfig":"18"},{"size":2030,"mtime":1606761160821,"results":"26","hashOfConfig":"18"},{"size":17526,"mtime":1606844652360,"results":"27","hashOfConfig":"18"},{"size":2720,"mtime":1606821465929,"results":"28","hashOfConfig":"18"},{"size":3013,"mtime":1607071934328,"results":"29","hashOfConfig":"18"},{"size":635,"mtime":1607073499480,"results":"30","hashOfConfig":"18"},{"size":2447,"mtime":1607103009733,"results":"31","hashOfConfig":"18"},{"size":1535,"mtime":1607080159145,"results":"32","hashOfConfig":"18"},{"size":1374,"mtime":1607086313710,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"q6gu23",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\VSCProjects\\E-Commerce-Website Nodejs\\client\\src\\App.js",["75","76","77","78","79","80"],"D:\\VSCProjects\\E-Commerce-Website Nodejs\\client\\src\\redux\\store.js",[],["81","82"],"D:\\VSCProjects\\E-Commerce-Website Nodejs\\client\\src\\components\\admin\\product-table\\index.jsx",[],"D:\\VSCProjects\\E-Commerce-Website Nodejs\\client\\src\\pages\\admin\\index.jsx",["83","84","85","86","87","88","89","90","91"],"import React, { useEffect, useState } from 'react';\r\nimport Filebase from 'react-file-base64';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ProductTable from '../../components/admin/product-table';\r\nimport { createProduct, deleteProduct } from '../../slices/product-slice';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\n\r\nimport StorageRoundedIcon from '@material-ui/icons/StorageRounded';\r\nimport ReceiptIcon from '@material-ui/icons/Receipt';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport './style.scss';\r\nimport OrderList from '../../components/admin/order-list';\r\n\r\nfunction Admin(props) {\r\n    const [recentPage, setRecentPage] = useState('Products');\r\n    const handleChange = (event, newValue) => {\r\n        setRecentPage(newValue);\r\n    };\r\n\r\n    const displayContent = () => {\r\n        switch (recentPage) {\r\n            case 'Products':\r\n                return <ProductTable />;\r\n            case 'Orders':\r\n                return <OrderList />;\r\n            case 'Users':\r\n                return <ProductTable />;\r\n            case 'Dashboard':\r\n                return <ProductTable />;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"App container mt-5\">\r\n            <h1>App.</h1>\r\n            {displayContent()}            \r\n            <BottomNavigation value={recentPage} color=\"secondary\" onChange={handleChange} className=\"fixed-bottom text-danger\">\r\n                <BottomNavigationAction label=\"Products\" value=\"Products\" icon={<StorageRoundedIcon />}/>\r\n                <BottomNavigationAction label=\"Orders\" value=\"Orders\" icon={<ReceiptIcon />} />\r\n                <BottomNavigationAction label=\"Users\" value=\"Users\" icon={<PeopleAltIcon />} />\r\n                <BottomNavigationAction label=\"Dashboard\" value=\"Dashboard\" icon={<DashboardIcon />} />\r\n            </BottomNavigation>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Admin;","D:\\VSCProjects\\E-Commerce-Website Nodejs\\client\\src\\api\\index.js",["92"],"D:\\VSCProjects\\E-Commerce-Website Nodejs\\client\\src\\index.js",[],["93","94"],"D:\\VSCProjects\\E-Commerce-Website Nodejs\\client\\src\\pages\\admin\\create-product\\index.jsx",["95","96","97","98","99","100","101","102","103"],"import React, { useEffect, useState } from 'react';\r\nimport Select from 'react-select';\r\nimport Filebase from 'react-file-base64';\r\nimport dataAdditional from '../../../constants/local-db.json';\r\nimport Modal from 'react-modal';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './style.scss'\r\nimport { createProduct, fetchProductData } from '../../../slices/product-slice';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { unwrapResult } from '@reduxjs/toolkit';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nModal.setAppElement('#root');\r\n\r\nfunction CreateProduct(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const params = useParams();\r\n    console.log(params.id);\r\n    \r\n    const history = useHistory();\r\n    \r\n    const [newData, setNewData] = useState({\r\n        name: '',\r\n        price: 0,\r\n        sale: '',\r\n        thumbnail: 'https://dummyimage.com/250/313131/cccccc',\r\n        stock: 0,\r\n        images: [],\r\n        category: '',\r\n        brand: '',\r\n        description: '',\r\n        isEnable: true,\r\n    });\r\n    const [modalDesc, setModalDesc] = useState(false);\r\n    const [desc, setDesc] = useState({\r\n        id: '',\r\n        type: '',\r\n        content: ''\r\n    });\r\n\r\n    const customStyles = {\r\n        content : {\r\n            height: '400px',\r\n            top: '50%',\r\n            left: '50%',\r\n            right: 'auto',\r\n            bottom: 'auto',\r\n            marginRight: '-50%',\r\n            transform: 'translate(-50%, -50%)'\r\n        }\r\n    };\r\n\r\n    useEffect(async () => {\r\n        if(params.id) {\r\n            console.log(\"get data...\")\r\n            const actionResult = await dispatch(fetchProductData());\r\n            console.log(actionResult);\r\n            const data = unwrapResult(actionResult);\r\n            const target = data.find(item => item._id === params.id);\r\n            target && setNewData(target);\r\n        } else {\r\n\r\n        }\r\n    }, [dispatch]);\r\n\r\n    const categoryList =  dataAdditional.categories;\r\n    const brandList = dataAdditional.brands;\r\n    const specList = dataAdditional.specs;\r\n\r\n    const convertToOptions = (arr) => {\r\n        const options = [];\r\n        for (let index = 0; index < arr.length; index++) {\r\n            options.push({value: arr[index].name, label: arr[index].name})\r\n        }\r\n        return options;\r\n    }\r\n\r\n    const handleAddDescription = () => {\r\n        if (newData.description !== '') {\r\n            let addDesc = JSON.parse(newData.description);\r\n            addDesc.push(desc);\r\n            setNewData({...newData, description: JSON.stringify(addDesc)});\r\n            setDesc({\r\n                id: '',\r\n                type: '',\r\n                content: ''\r\n            });\r\n            setModalDesc(false);\r\n        } else {\r\n            let addDesc = [];\r\n            addDesc.push(desc);\r\n            setNewData({...newData, description: JSON.stringify(addDesc)});\r\n            setDesc({\r\n                id: '',\r\n                type: '',\r\n                content: ''\r\n            });\r\n            setModalDesc(false);\r\n        }\r\n    }\r\n\r\n    const handleRemoveDesc = (id) => {\r\n        if (newData.description !== '') {\r\n            let descList = JSON.parse(newData.description);\r\n            let descFiltered = descList.filter(item => item.id !== id);\r\n            setNewData({...newData, description: JSON.stringify(descFiltered)});\r\n        }\r\n    }\r\n\r\n    const displayDescriptions = () => {        \r\n        if (newData.description !== '') {\r\n            const descList = JSON.parse(newData.description);\r\n            return (\r\n                <table class=\"table table-bordered\">\r\n                    <tbody>\r\n                        {\r\n                            descList && descList.map((item, index) => {\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        <td>{item.type}</td>\r\n                                        <td>\r\n                                            <div className=\"d-flex justify-content-between\">\r\n                                                {item.content}\r\n                                                <a className=\"btn btn-danger btn-sm\" onClick={() => handleRemoveDesc(item.id)}><i className=\"fas fa-backspace\"></i></a>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            )\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n\r\n    const displayProductImages = () => {\r\n        if(newData !== []) {\r\n            return (\r\n                newData.images && newData.images.map((item, index) => {\r\n                    return (\r\n                        <div className=\"card bg-light text-white\" style={{width: '15rem'}} key={index}>\r\n                            <img className=\"card-img\" src={item} alt=\"Card image\" />\r\n                            <div className=\"card-img-overlay\">\r\n                                <a className=\"card-title btn btn-danger\" onClick={(image) => handleRemoveImage(item)}><i class=\"fas fa-times\"></i></a>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            )\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n\r\n    const handleAddImage = (data) => {\r\n        let imageList = newData.images;\r\n        for (const image of data) {\r\n            imageList.push(image.base64);\r\n        }\r\n        setNewData({...newData, images: imageList});\r\n    }\r\n\r\n    const handleRemoveImage = (image) => {\r\n        let imageList = newData.images;\r\n        let filter = imageList.filter(item => item !== image);\r\n        setNewData({...newData, images: filter});\r\n    }\r\n\r\n    const handleAddProduct = async (e) => {\r\n        e.preventDefault();\r\n        dispatch(createProduct(newData));\r\n        return (\r\n            <div className=\"alert alert-success\" role=\"alert\">\r\n                This is a success alert—check it out!\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>{params.id ? \"Update product\" : \"Create Product\"}</h1>\r\n            <form>\r\n                <div className=\"form-row\">\r\n                    <div className=\"form-group col\">\r\n                        <label htmlFor=\"name\">Product name</label>\r\n                        <input type=\"text\" className=\"form-control\" value={newData.name} onChange={(e) => setNewData({...newData, name: e.target.value})} id=\"name\"/>\r\n                    </div>\r\n                    {\r\n                        params.id && (\r\n                            <div className=\"form-group col-2\">\r\n                                <label className=\"d-block\">Is Enable</label>\r\n                                <FormControl component=\"fieldset\">\r\n                                    <FormGroup aria-label=\"position\" row>\r\n                                        <FormControlLabel\r\n                                            control={<Switch color=\"secondary\" />}\r\n                                            checked={newData.isEnable}\r\n                                            onChange={() => setNewData({...newData, isEnable: !newData.isEnable})}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-6\">\r\n                        <label htmlFor=\"category\">Category</label>\r\n                        <Select id=\"category\" defaultValue={{ label: newData.category, value: newData.category }} onChange={(e) => setNewData({...newData, category: e.value})} options={convertToOptions(categoryList)}/>\r\n                    </div>\r\n                    <div className=\"form-group col-md-6\">\r\n                        <label htmlFor=\"brand\">Brand</label>\r\n                        <Select id=\"brand\" defaultValue={{ label: newData.brand, value: newData.brand }} onChange={(e) => setNewData({...newData, brand: e.value})} options={convertToOptions(brandList)}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-6\">\r\n                        <label htmlFor=\"price\">Price</label>\r\n                        <input type=\"number\" value={newData.price} min={0} className=\"form-control\" onChange={(e) => setNewData({...newData, price: e.target.value})} id=\"price\" />\r\n                    </div>\r\n                    <div className=\"form-group col-md-3\">\r\n                        <label htmlFor=\"discount\">Discount</label>        \r\n                        <input type=\"number\" value={newData.sale} min={0} max={100} className=\"form-control\" onChange={(e) => setNewData({...newData, sale: e.target.value})} id=\"discount\" />          \r\n                    </div>\r\n                    <div className=\"form-group col-md-3\">\r\n                        <label htmlFor=\"stock\">Stock</label>\r\n                        <input type=\"number\" value={newData.stock} min={0} className=\"form-control\" onChange={(e) => setNewData({...newData, stock: e.target.value})} id=\"stock\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"form-group form-shadow p-4\">\r\n                            <label className=\"d-block\">Thumbnail</label>\r\n                            <Filebase\r\n                                type=\"file\"\r\n                                multiple={false}\r\n                                className=\"form-control\"\r\n                                onDone={(data) => setNewData({...newData, thumbnail: data.base64})}\r\n                            />\r\n                            <img src={newData.thumbnail} alt=\"...\" class=\"img-thumbnail mt-3\"></img>\r\n                        </div>\r\n                        <div className=\"form-group form-shadow p-4\">\r\n                            <div className=\"mb-5\">\r\n                                <label className=\"d-block\">Add image</label>\r\n                                <Filebase\r\n                                    type=\"file\"\r\n                                    multiple={true}\r\n                                    onDone={(data) => handleAddImage(data)}\r\n                                />\r\n                            </div>\r\n                            {displayProductImages()}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"border form-shadow p-4\">\r\n                            <h3 className=\"d-block text-center\">Specs</h3>      \r\n                            <div className=\"form-row\">                                \r\n                                {displayDescriptions()}\r\n                            </div>\r\n                            <div className=\"d-flex justify-content-end\">\r\n                                <a className=\"btn btn-primary\" onClick={() => setModalDesc(true)}><i class=\"fas fa-plus\"></i></a>\r\n                            </div>\r\n                            <div>\r\n                                <Modal\r\n                                    isOpen={modalDesc}\r\n                                    style={customStyles}\r\n                                    ariaHideApp={false}\r\n                                >             \r\n                                    <div className=\"form-row\">\r\n                                        <div className=\"form-group col-md-6\">\r\n                                            <Select id=\"category\" onChange={(e) => setDesc({...desc, type: e.value, id: uuidv4()})} options={convertToOptions(specList)}/>\r\n                                        </div>\r\n                                        <div className=\"form-group col-md-6\">\r\n                                            <textarea rows=\"4\" cols=\"40\" height=\"200px\" style={{height: '300px'}} type=\"text\" onChange={(e) => setDesc({...desc, content: e.target.value})}  className=\"form-control\"/>\r\n                                        </div>                                        \r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-around\">\r\n                                        <a className=\"btn btn-danger\" onClick={() => setModalDesc(false)}>Close</a>\r\n                                        <a className=\"btn btn-primary\" onClick={handleAddDescription}>Add</a>\r\n                                    </div>\r\n                                </Modal>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <a onClick={() => history.push('/admin')} class=\"btn btn-outline-secondary btn-lg btn-block mt-4 mb-5\">Back</a>\r\n                    </div>\r\n                    <div className=\"col-8\">\r\n                        <button onClick={handleAddProduct} class=\"btn btn-secondary btn-lg btn-block mt-4 mb-5\">{params.id ? \"Update product\" : \"Create Product\"}</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateProduct;","D:\\VSCProjects\\E-Commerce-Website Nodejs\\client\\src\\pages\\admin\\manage-categories-brands\\index.jsx",["104"],"import React from 'react';\r\nimport data from '../../../constants/local-db.json';\r\n\r\nfunction ManageCatBra(props) {\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                    <div className=\"input-group\">                    \r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Category\"/>\r\n                        <div className=\"input-group-prepend\">\r\n                            <button className=\"btn btn-secondary\">Add</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <div className=\"input-group\">                    \r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Brand\"/>\r\n                        <div className=\"input-group-prepend\">\r\n                            <button className=\"btn btn-secondary\">Add</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ManageCatBra;","D:\\VSCProjects\\E-Commerce-Website Nodejs\\client\\src\\slices\\product-slice.js",["105"],"D:\\VSCProjects\\E-Commerce-Website Nodejs\\client\\src\\components\\admin\\order-list\\index.jsx",["106","107","108","109","110","111","112"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { fetchOrderData } from '../../../slices/order-slice';\r\nimport { deleteProduct } from '../../../slices/product-slice';\r\nimport dataAdditional from '../../../constants/local-db.json';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport moment from 'moment';\r\n\r\nimport './style.scss';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        border: 'solid 2px #e9ecef',\r\n        display: 'block'\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(20),\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n      fontFamily: 'Quicksand',\r\n    },\r\n    column: {\r\n        flexBasis: '33.33%',\r\n    }\r\n}));\r\n\r\nfunction OrderList(props) {\r\n\r\n    var day1 = new Date(\"Sun Nov 29 2020 00:22:41 GMT+0700 (Indochina Time)\");\r\n    \r\n    const classes = useStyles();\r\n    const {orderStatus} = dataAdditional;\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [actionOrder, setActionOrder] = useState(false);\r\n    const orderList = useSelector(state => state.orders);\r\n    const itemOnPage = 6;\r\n    const [page, setPage] = useState(1);\r\n    const [progressValue, setProgressValue] = useState(7); // 7 37 66 100\r\n    const [progressStatus, setProgressStatus] = useState(1);\r\n\r\n    useEffect(() => {\r\n        console.log(\"get data...\")\r\n        dispatch(fetchOrderData());\r\n        setActionOrder(false);\r\n    }, [actionOrder,dispatch]);\r\n\r\n    const handleDeleteProduct = async (e, id) => {\r\n        e.preventDefault();\r\n        dispatch(deleteProduct(id));\r\n        setActionOrder(true);\r\n    }\r\n\r\n    const changeStt = (id) => {\r\n        console.log(id);\r\n        switch (id) {\r\n            case 1:\r\n                setProgressValue(7);\r\n                setProgressStatus(1);\r\n                break;\r\n            case 2:\r\n                setProgressValue(37);\r\n                setProgressStatus(2);\r\n                break;\r\n            case 3:\r\n                setProgressValue(66);\r\n                setProgressStatus(3);\r\n                break;\r\n            case 4:\r\n                setProgressValue(100);\r\n                setProgressStatus(4);\r\n        }\r\n    }\r\n\r\n    const displayOrderData = (data, page) => {\r\n\r\n        const start = (page - 1) * itemOnPage;\r\n        const dataOnPage = data.slice(start, start + itemOnPage);\r\n\r\n        return(\r\n            // dataOnPage && dataOnPage.map((item, index) => {\r\n            //     return(\r\n            //         <tr key={index}>\r\n            //             <td>{index + 1 + start}</td>\r\n            //             <td>{item.name}</td>\r\n            //             <td>{item.category}</td>\r\n            //             <td>{item.price}</td>\r\n            //             <td>{item.stock}</td>\r\n            //             <td>\r\n            //                 <p className={item.isEnable === true ? 'text-success' : 'text-danger'}>\r\n            //                     {item.isEnable === true ? 'Available' : 'Not available'}\r\n            //                 </p>\r\n            //             </td>\r\n            //             <td>\r\n            //                 <button onClick={() => history.push(`${location.pathname}/create-product/${item._id}`)} className=\"btn btn-primary btn-action\"><i class=\"fas fa-edit\"></i></button>\r\n            //                 <button className=\"btn btn-danger btn-action\" onClick={(e, id) => handleDeleteProduct(e, item._id)}><i class=\"fas fa-trash\"></i></button>\r\n            //             </td>\r\n            //         </tr>\r\n            //     )\r\n            // })\r\n\r\n            <tbody className=\"fix-tbody\">\r\n                <tr>\r\n                    <td>\r\n                        <div className={classes.root}>\r\n                            <Accordion color=\"secondary\">\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"panel1a-content\"\r\n                                    id=\"panel1a-header\"\r\n                                >\r\n                                    <div className={classes.column}>\r\n                                        <Typography className={classes.heading}>#1</Typography>\r\n                                    </div>\r\n                                    <div className={classes.column}>\r\n                                        <Typography className={classes.heading}>Tran Quoc Bao</Typography>\r\n                                    </div>\r\n                                    <div className={classes.column}>\r\n                                        <Typography className={classes.heading}>{moment(day1).fromNow()}</Typography>\r\n                                    </div>\r\n                                </AccordionSummary>\r\n                                <AccordionDetails className=\"d-block\">\r\n                                    <div className=\"row pl-5 pr-5 pb-5 pt-2\">\r\n                                        <div className=\"col\">\r\n                                            <table className=\"table\">\r\n                                                <thead className=\"thead-light\">\r\n                                                    <tr>\r\n                                                        <th scope=\"col\">#</th>\r\n                                                        <th scope=\"col\">Product</th>\r\n                                                        <th scope=\"col\">Quantity</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <th>#</th>\r\n                                                        <th>GTX 1060</th>\r\n                                                        <th>2</th>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                                <tfoot className=\"table-danger text-danger\">\r\n                                                    <tr>\r\n                                                        <th scope=\"col\">Total</th>\r\n                                                        <th colSpan='2'>{Intl.NumberFormat('de-DE', { style: 'currency', currency: 'USD' }).format(2000)}</th>\r\n                                                    </tr>\r\n                                                </tfoot>\r\n                                            </table>\r\n                                        </div>\r\n                                        <div className=\"col form-shadow pt-3 pl-3\">\r\n                                            <div className=\"d-block\">\r\n                                                <p>Customer name: <b>Tran Quoc Bao</b></p>\r\n                                            </div>\r\n                                            <div className=\"d-block\">\r\n                                                <p>Phone number: <b>0123456789</b></p>\r\n                                            </div>\r\n                                            <div className=\"d-block\">\r\n                                                <p>Address: <b>Su Van Hanh, Ho Chi Minh City</b></p>\r\n                                            </div>\r\n                                        </div>                                        \r\n                                    </div>\r\n                                    <div className=\"d-block pl-5 pr-5\">\r\n                                        <div className=\"d-flex justify-content-between\">\r\n                                            {orderStatus && orderStatus.map((item, index) => {\r\n                                                return(\r\n                                                    <div key={index}>\r\n                                                        <p style={{cursor: 'pointer'}} className={progressStatus === item.id ? 'font-weight-bold' : ''} onClick={(id) => {changeStt(item.id)}}>\r\n                                                            {item.status}\r\n                                                        </p>\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n                                        </div>\r\n                                        <div className={classes.root}>\r\n                                            <LinearProgress variant=\"determinate\" value={progressValue} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-end p-5\">\r\n                                        <button className=\"btn btn-success\">Save</button>\r\n                                    </div>\r\n                                </AccordionDetails>\r\n                            </Accordion>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>\r\n                        <div className={classes.root}>\r\n                            <Accordion color=\"secondary\">\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"panel1a-content\"\r\n                                    id=\"panel1a-header\"\r\n                                >\r\n                                    <div className={classes.column}>\r\n                                        <Typography className={classes.heading}>#2</Typography>\r\n                                    </div>\r\n                                    <div className={classes.column}>\r\n                                        <Typography className={classes.heading}>Tran Quang Sang</Typography>\r\n                                    </div>\r\n                                    <div className={classes.column}>\r\n                                        <Typography className={classes.heading}>{moment(day1).fromNow()}</Typography>\r\n                                    </div>\r\n                                </AccordionSummary>\r\n                                <AccordionDetails className=\"d-block\">\r\n                                    <div className=\"row pl-5 pr-5 pb-5 pt-2\">\r\n                                        <div className=\"col\">\r\n                                            <table className=\"table\">\r\n                                                <thead className=\"thead-light\">\r\n                                                    <tr>\r\n                                                        <th scope=\"col\">#</th>\r\n                                                        <th scope=\"col\">Product</th>\r\n                                                        <th scope=\"col\">Quantity</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <th>#</th>\r\n                                                        <th>ASUS G812</th>\r\n                                                        <th>2</th>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <th>#</th>\r\n                                                        <th>RTX 2060</th>\r\n                                                        <th>4</th>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                                <tfoot className=\"table-danger text-danger\">\r\n                                                    <tr>\r\n                                                        <th scope=\"col\">Total</th>\r\n                                                        <th colSpan='2'>{Intl.NumberFormat('de-DE', { style: 'currency', currency: 'USD' }).format(10000)}</th>\r\n                                                    </tr>\r\n                                                </tfoot>\r\n                                            </table>\r\n                                        </div>\r\n                                        <div className=\"col form-shadow pt-3 pl-3\">\r\n                                            <div className=\"d-block\">\r\n                                                <p>Customer name: <b>Tran Quang Sang</b></p>\r\n                                            </div>\r\n                                            <div className=\"d-block\">\r\n                                                <p>Phone number: <b>0123456789</b></p>\r\n                                            </div>\r\n                                            <div className=\"d-block\">\r\n                                                <p>Address: <b>Su Van Hanh, Ho Chi Minh City</b></p>\r\n                                            </div>\r\n                                        </div>                                        \r\n                                    </div>\r\n                                    <div className=\"d-block pl-5 pr-5\">\r\n                                        <div className=\"d-flex justify-content-between\">\r\n                                            {orderStatus && orderStatus.map((item, index) => {\r\n                                                return(\r\n                                                    <div key={index}>\r\n                                                        <p style={{cursor: 'pointer'}} className={progressStatus === item.id ? 'font-weight-bold' : ''} onClick={(id) => {changeStt(item.id)}}>\r\n                                                            {item.status}\r\n                                                        </p>\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n                                        </div>\r\n                                        <div className={classes.root}>\r\n                                            <LinearProgress variant=\"determinate\" value={progressValue} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-end p-5\">\r\n                                        <button className=\"btn btn-success\">Save</button>\r\n                                    </div>\r\n                                </AccordionDetails>\r\n                            </Accordion>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n\r\n            </tbody>\r\n\r\n                \r\n        )\r\n    }\r\n\r\n    const calcPagination = () => {\r\n\r\n        let arrPageNums = [];\r\n        for (let index = 1; index <= Math.ceil(orderList.length / itemOnPage); index++) {\r\n            arrPageNums.push(index);\r\n        }\r\n\r\n        return (\r\n            arrPageNums.map(item => {\r\n                return (\r\n                    <li className={`page-item ${item === page ? 'active' : ''}`} key={item}><button className=\"page-link\" onClick={() => setPage(item)}>{item}</button></li>\r\n                )\r\n            })\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"d-flex justify-content-end\">\r\n                <button className=\"btn btn-light m-3\">Refresh</button>\r\n            </div>\r\n            <table class=\"table table-hover table-shadow table-order\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">#Code</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {displayOrderData(orderList, page)}\r\n                </tbody>\r\n                <tfoot>\r\n                    <tr>\r\n                        <th scope=\"col\">#Code</th>\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n\r\n            <div>\r\n                <ul className=\"pagination justify-content-end\">\r\n                    <li className={`page-item ${page > 1 ? '' : 'disabled'}`}>\r\n                        <button className=\"page-link\" onClick={() => setPage(page-1)}>Prev</button>\r\n                    </li>                    \r\n                    {calcPagination()}\r\n                    <li className={`page-item ${page < Math.ceil(orderList.length / itemOnPage) ? '' : 'disabled'}`}>\r\n                        <button className=\"page-link\" onClick={() => setPage(page+1)}>Next</button>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n                \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OrderList;","D:\\VSCProjects\\E-Commerce-Website Nodejs\\client\\src\\slices\\order-slice.js",["113"],"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport * as api from '../api';\r\n\r\nexport const fetchOrderData = createAsyncThunk('orders/fetchData', async (params, thunkAPI) => {\r\n    const { data } = await api.fetchOrders();\r\n    return data;\r\n})\r\n\r\nexport const createOrder = createAsyncThunk('orders/create', async (order, thunkAPI) => {\r\n    const { data } = await api.createOrder(order);\r\n    return data;\r\n})\r\n\r\nexport const cancelOrder = createAsyncThunk('orders/cancel', async (id, thunkAPI) => {\r\n    console.log(id);\r\n    await api.cancelOrder(id);\r\n    return;\r\n})\r\n\r\nexport const changeStatusOrder = createAsyncThunk('orders/status', async (statusObj, thunkAPI) => {\r\n    console.log(statusObj);\r\n    await api.changeStatusOrder(statusObj);\r\n    return;\r\n})\r\n\r\nconst orderSlice = createSlice({\r\n    name: 'orders',\r\n    initialState: [],\r\n    reducers: {\r\n        \r\n    },\r\n    extraReducers: {\r\n        [fetchOrderData.pending]: (state) => {\r\n            console.log('data fetch pending..');\r\n        },\r\n        [fetchOrderData.fulfilled]: (state, action) => {\r\n            return action.payload;\r\n        },\r\n        [fetchOrderData.rejected]: (state) => {\r\n            console.log('data fetch rejected.');\r\n        },\r\n        [createOrder.pending]: (state) => {\r\n            console.log('create product pending..');\r\n        },\r\n        [createOrder.fulfilled]: (state, action) => {\r\n            console.log('product created.');\r\n            return [...state, action.payload];\r\n        },\r\n        [createOrder.rejected]: (state) => {\r\n            console.log('create product rejected.');\r\n        },\r\n        [cancelOrder.pending]: (state) => {\r\n            console.log('delete product pending..');\r\n        },\r\n        [cancelOrder.fulfilled]: (state, action) => {\r\n            console.log(\"id target\",action.meta.arg);\r\n            console.log('order canceled');\r\n            let target = state.find(item => item._id === action.meta.arg);\r\n            const index = state.findIndex(item => item._id === action.meta.arg);\r\n            target.isCancel = true;\r\n            return [...state, state[index] = target];\r\n        },\r\n        [cancelOrder.rejected]: (state) => {\r\n            console.log('cancel order rejected.');\r\n        },\r\n        [changeStatusOrder.pending]: (state) => {\r\n            console.log('delete product pending..');\r\n        },\r\n        [changeStatusOrder.fulfilled]: (state, action) => {\r\n            console.log(action);\r\n            return state;\r\n        },\r\n        [changeStatusOrder.rejected]: (state) => {\r\n            console.log('cancel order rejected.');\r\n        }\r\n    }\r\n});\r\n\r\nconst { actions, reducer } = orderSlice;\r\nexport default reducer;",["114","115"],"D:\\VSCProjects\\E-Commerce-Website Nodejs\\client\\src\\pages\\register-jwt-auth\\index.js",["116"],"import Axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport {toast} from 'react-toastify';\r\nimport { registerUser } from '../../api';\r\n\r\nfunction RegisterJWTAuth(props) {\r\n    const [userData, setUserData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        passwordConfirm: ''\r\n    });\r\n\r\n    const { name, email, password, passwordConfirm } = userData;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(name && email && password) {\r\n            if(password === passwordConfirm) {\r\n                registerUser({\r\n                    name: name, email: email, password: password\r\n                }).then(res => {\r\n                    setUserData({\r\n                        name: '',\r\n                        email: '',\r\n                        password: '',\r\n                        passwordConfirm: ''\r\n                    })\r\n                    toast.success('res.data.message');\r\n                }).catch(err => {\r\n                    setUserData({\r\n                        name: '',\r\n                        email: '',\r\n                        password: '',\r\n                        passwordConfirm: ''\r\n                    });\r\n                    console.log(err.response);\r\n                })\r\n            } else {\r\n                toast.error('Password does not match')\r\n            }\r\n            \r\n        } else {\r\n            toast.error('Please fill out all fields')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {console.log(userData)}\r\n            <form>\r\n                <div className=\"form-group\">\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"name\"\r\n                            onChange={(e) => setUserData({...userData, name: e.target.value})}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email address</label>\r\n                    <input type=\"email\" className=\"form-control\" id=\"email\"\r\n                        onChange={(e) => setUserData({...userData, email: e.target.value})}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" className=\"form-control\" id=\"password\"\r\n                        onChange={(e) => setUserData({...userData, password: e.target.value})}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"passwordConfirm\">Password Confirm</label>\r\n                    <input type=\"password\" className=\"form-control\" id=\"passwordConfirm\"\r\n                        onChange={(e) => setUserData({...userData, passwordConfirm: e.target.value})}/>\r\n                </div>\r\n                <button onClick={handleSubmit} className=\"btn btn-primary\">Submit</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegisterJWTAuth;","D:\\VSCProjects\\E-Commerce-Website Nodejs\\client\\src\\pages\\activation-jwt-auth\\index.js",["117"],"D:\\VSCProjects\\E-Commerce-Website Nodejs\\client\\src\\pages\\login-jwt-auth\\index.jsx",[],"D:\\VSCProjects\\E-Commerce-Website Nodejs\\client\\src\\helpers\\auth.js",[],"D:\\VSCProjects\\E-Commerce-Website Nodejs\\client\\src\\pages\\reset-password-jwt-auth\\index.jsx",[],{"ruleId":"118","severity":1,"message":"119","line":1,"column":10,"nodeType":"120","messageId":"121","endLine":1,"endColumn":21},{"ruleId":"118","severity":1,"message":"122","line":2,"column":27,"nodeType":"120","messageId":"121","endLine":2,"endColumn":36},{"ruleId":"118","severity":1,"message":"123","line":2,"column":38,"nodeType":"120","messageId":"121","endLine":2,"endColumn":46},{"ruleId":"118","severity":1,"message":"124","line":3,"column":10,"nodeType":"120","messageId":"121","endLine":3,"endColumn":26},{"ruleId":"118","severity":1,"message":"125","line":4,"column":8,"nodeType":"120","messageId":"121","endLine":4,"endColumn":13},{"ruleId":"118","severity":1,"message":"126","line":5,"column":53,"nodeType":"120","messageId":"121","endLine":5,"endColumn":57},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"118","severity":1,"message":"122","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":26},{"ruleId":"118","severity":1,"message":"131","line":2,"column":8,"nodeType":"120","messageId":"121","endLine":2,"endColumn":16},{"ruleId":"118","severity":1,"message":"119","line":3,"column":10,"nodeType":"120","messageId":"121","endLine":3,"endColumn":21},{"ruleId":"118","severity":1,"message":"132","line":3,"column":23,"nodeType":"120","messageId":"121","endLine":3,"endColumn":34},{"ruleId":"118","severity":1,"message":"133","line":5,"column":10,"nodeType":"120","messageId":"121","endLine":5,"endColumn":23},{"ruleId":"118","severity":1,"message":"134","line":5,"column":25,"nodeType":"120","messageId":"121","endLine":5,"endColumn":38},{"ruleId":"118","severity":1,"message":"135","line":6,"column":10,"nodeType":"120","messageId":"121","endLine":6,"endColumn":20},{"ruleId":"118","severity":1,"message":"136","line":14,"column":10,"nodeType":"120","messageId":"121","endLine":14,"endColumn":20},{"ruleId":"137","severity":1,"message":"138","line":25,"column":9,"nodeType":"139","messageId":"140","endLine":34,"endColumn":10},{"ruleId":"118","severity":1,"message":"141","line":3,"column":7,"nodeType":"120","messageId":"121","endLine":3,"endColumn":13},{"ruleId":"127","replacedBy":"142"},{"ruleId":"129","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":58,"column":15,"nodeType":"146","endLine":69,"endColumn":6},{"ruleId":"144","severity":1,"message":"147","line":69,"column":8,"nodeType":"148","endLine":69,"endColumn":18,"suggestions":"149"},{"ruleId":"150","severity":1,"message":"151","line":129,"column":49,"nodeType":"152","endLine":129,"endColumn":128},{"ruleId":"153","severity":1,"message":"154","line":150,"column":29,"nodeType":"152","endLine":150,"endColumn":85},{"ruleId":"150","severity":1,"message":"151","line":152,"column":33,"nodeType":"152","endLine":152,"endColumn":119},{"ruleId":"150","severity":1,"message":"151","line":268,"column":33,"nodeType":"152","endLine":268,"endColumn":99},{"ruleId":"150","severity":1,"message":"151","line":285,"column":41,"nodeType":"152","endLine":285,"endColumn":107},{"ruleId":"150","severity":1,"message":"151","line":286,"column":41,"nodeType":"152","endLine":286,"endColumn":103},{"ruleId":"150","severity":1,"message":"151","line":295,"column":25,"nodeType":"152","endLine":295,"endColumn":128},{"ruleId":"118","severity":1,"message":"155","line":2,"column":8,"nodeType":"120","messageId":"121","endLine":2,"endColumn":12},{"ruleId":"118","severity":1,"message":"156","line":60,"column":9,"nodeType":"120","messageId":"121","endLine":60,"endColumn":16},{"ruleId":"118","severity":1,"message":"126","line":3,"column":10,"nodeType":"120","messageId":"121","endLine":3,"endColumn":14},{"ruleId":"118","severity":1,"message":"157","line":15,"column":16,"nodeType":"120","messageId":"121","endLine":15,"endColumn":22},{"ruleId":"118","severity":1,"message":"158","line":42,"column":11,"nodeType":"120","messageId":"121","endLine":42,"endColumn":19},{"ruleId":"118","severity":1,"message":"159","line":43,"column":11,"nodeType":"120","messageId":"121","endLine":43,"endColumn":18},{"ruleId":"118","severity":1,"message":"160","line":58,"column":11,"nodeType":"120","messageId":"121","endLine":58,"endColumn":30},{"ruleId":"137","severity":1,"message":"138","line":66,"column":9,"nodeType":"139","messageId":"140","endLine":82,"endColumn":10},{"ruleId":"118","severity":1,"message":"161","line":88,"column":15,"nodeType":"120","messageId":"121","endLine":88,"endColumn":25},{"ruleId":"118","severity":1,"message":"156","line":79,"column":9,"nodeType":"120","messageId":"121","endLine":79,"endColumn":16},{"ruleId":"127","replacedBy":"162"},{"ruleId":"129","replacedBy":"163"},{"ruleId":"118","severity":1,"message":"164","line":1,"column":8,"nodeType":"120","messageId":"121","endLine":1,"endColumn":13},{"ruleId":"118","severity":1,"message":"165","line":2,"column":10,"nodeType":"120","messageId":"121","endLine":2,"endColumn":21},"no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'fetchProductData' is defined but never used.","'Admin' is defined but never used.","'Link' is defined but never used.","no-native-reassign",["166"],"no-negated-in-lhs",["167"],"'Filebase' is defined but never used.","'useSelector' is defined but never used.","'createProduct' is defined but never used.","'deleteProduct' is defined but never used.","'makeStyles' is defined but never used.","'withStyles' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'appUrl' is assigned a value but never used.",["166"],["167"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.","ArrayExpression",["168"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'data' is defined but never used.","'actions' is assigned a value but never used.","'uuidv4' is defined but never used.","'location' is assigned a value but never used.","'history' is assigned a value but never used.","'handleDeleteProduct' is assigned a value but never used.","'dataOnPage' is assigned a value but never used.",["166"],["167"],"'Axios' is defined but never used.","'useLocation' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},"Update the dependencies array to be: [dispatch, params.id]",{"range":"171","text":"172"},[2144,2154],"[dispatch, params.id]"]